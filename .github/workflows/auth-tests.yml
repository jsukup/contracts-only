name: Authentication Integration Tests

on:
  push:
    branches: [main, develop]
    paths:
      - 'src/contexts/AuthContext.tsx'
      - 'src/components/auth/**'
      - 'src/lib/auth*.ts'
      - 'src/app/api/**'
      - 'tests/integration/auth-*.test.ts'
      - 'tests/integration/api-auth.*.test.ts'
      - 'tests/integration/oauth-*.test.ts'
  pull_request:
    branches: [main]
    paths:
      - 'src/contexts/AuthContext.tsx'
      - 'src/components/auth/**'
      - 'src/lib/auth*.ts'
      - 'src/app/api/**'
      - 'tests/integration/auth-*.test.ts'
      - 'tests/integration/api-auth.*.test.ts'
      - 'tests/integration/oauth-*.test.ts'

jobs:
  test-auth:
    name: Run Authentication Tests
    runs-on: ubuntu-latest
    timeout-minutes: 15
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: |
        # Retry npm ci up to 3 times with exponential backoff for rate limiting
        for i in {1..3}; do
          if npm ci; then
            echo "‚úÖ npm ci succeeded on attempt $i"
            break
          else
            echo "‚ùå npm ci failed on attempt $i"
            if [ $i -eq 3 ]; then
              echo "üí• All npm ci attempts failed"
              exit 1
            fi
            echo "‚è≥ Waiting $((i * 10)) seconds before retry..."
            sleep $((i * 10))
          fi
        done
    
    - name: Check Supabase Connection
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.TEST_SUPABASE_SERVICE_ROLE_KEY }}
      run: |
        npm install -g tsx
        npx tsx scripts/test-supabase-connection.ts
    
    - name: Run Integration Tests
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY }}
        SUPABASE_SERVICE_ROLE_KEY: ${{ secrets.TEST_SUPABASE_SERVICE_ROLE_KEY }}
        NODE_ENV: test
        CI: true
        JEST_JUNIT_OUTPUT_DIR: ./
        JEST_JUNIT_OUTPUT_NAME: junit.xml
      run: |
        npm run test:integration:auth:ci -- --maxWorkers=2
    
    - name: Upload Coverage Reports
      if: success()
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: auth-integration
        name: auth-coverage
        fail_ci_if_error: false
    
    - name: Test Report
      if: always()
      uses: dorny/test-reporter@v1
      with:
        name: Authentication Test Results
        path: 'junit.xml'
        reporter: jest-junit
        fail-on-error: false

  verify-build:
    name: Verify Build
    runs-on: ubuntu-latest
    needs: test-auth
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        registry-url: 'https://registry.npmjs.org'
    
    - name: Install dependencies
      run: |
        # Retry npm ci up to 3 times with exponential backoff for rate limiting
        for i in {1..3}; do
          if npm ci; then
            echo "‚úÖ npm ci succeeded on attempt $i"
            break
          else
            echo "‚ùå npm ci failed on attempt $i"
            if [ $i -eq 3 ]; then
              echo "üí• All npm ci attempts failed"
              exit 1
            fi
            echo "‚è≥ Waiting $((i * 10)) seconds before retry..."
            sleep $((i * 10))
          fi
        done
    
    - name: Build application
      env:
        NEXT_PUBLIC_SUPABASE_URL: ${{ secrets.TEST_SUPABASE_URL }}
        NEXT_PUBLIC_SUPABASE_ANON_KEY: ${{ secrets.TEST_SUPABASE_ANON_KEY }}
      run: npm run build
    
    - name: Check build output
      run: |
        if [ -d ".next" ]; then
          echo "‚úÖ Build successful"
          ls -la .next/
        else
          echo "‚ùå Build failed - no .next directory found"
          exit 1
        fi